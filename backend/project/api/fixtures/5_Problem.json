[
  {
    "model": "api.problem",
    "fields": {
      "workbook_id_id": 1,
      "problem_json": "{\"info\":{\"title\":\"サンプル問題\",\"workbook_id\":\"5\"},\"questions\":{\"1hm93ni950.ik0rofhqnm\":{\"questionType\":\"root\",\"title\":\"fake\",\"childIds\":[\"1hm93o7ii0.u8n8mmlusi8\",\"1hm96houp0.6o3ef27g0o\",\"1hm96u0vg0.moigkhf00i8\",\"1hm976noa0.eom49lrf12\",\"1hm97ernh0.p99aviegceg\"]},\"1hm93o7ii0.u8n8mmlusi8\":{\"parentId\":\"1hm93ni950.ik0rofhqnm\",\"question\":\"次のJavaScriptのコードの出力を答えない。\\n```\\nconsole.log(5 + \\\"5\\\");\\n```\",\"questionType\":\"radio\",\"options\":[{\"id\":\"1hm966o890.vii8ne652i8\",\"value\":\"10\"},{\"id\":\"1hm966sjf0.d6gtqemhejg\",\"value\":\"\\\"55\\\"\"},{\"id\":\"1hm9675880.iub5eeecelo\",\"value\":\"55\"},{\"id\":\"1hm967a3i0.6p0lb0jjvm\",\"value\":\"Error\"}],\"canMultiple\":false,\"answers\":[{\"id\":\"1hm967mem0.vhc1gb9u39o\",\"value\":\"\\\"55\\\"\"}]},\"1hm96houp0.6o3ef27g0o\":{\"parentId\":\"1hm93ni950.ik0rofhqnm\",\"question\":\"以下の文章を読み、問題に答えなさい。\\n\\n　　　私が両手をひろげても、\\n　　　お空はちっとも飛べないが\\n　　　飛べる小鳥は私のやうに、\\n　　　地面を速くは走れない。\\n　　　私がからだをゆすっても、\\n　　　きれいな音は出ないけど、\\n　　　あの鳴る鈴は私のやうに\\n　　　たくさんな唄は知らないよ。\\n　　　鈴と、小鳥と、それから私、\\n　　　みんなちがって、みんないい。\",\"questionType\":\"nested\",\"childIds\":[\"1hm96lros0.thi4sqansdg\",\"1hm96n6cd0.tg4s6pbaveo\"]},\"1hm96lros0.thi4sqansdg\":{\"parentId\":\"1hm96houp0.6o3ef27g0o\",\"question\":\"著者は誰か\",\"questionType\":\"textarea\",\"maxlength\":\"60\",\"answers\":[{\"id\":\"1hm96m8fr0.82ke1ahbcc8\",\"value\":\"金子みすゞ\"},{\"id\":\"1hm96mebl0.inkvtaiendg\",\"value\":\"金子　みすゞ\"},{\"id\":\"1hm96mi9l0.cueev8kcdko\",\"value\":\"金子みすず\"},{\"id\":\"1hm96mog00.tpb3sbi39ko\",\"value\":\"金子　みすず\"}],\"useAIScoring\":false},\"1hm96n6cd0.tg4s6pbaveo\":{\"parentId\":\"1hm96houp0.6o3ef27g0o\",\"question\":\"わたし、小鳥、鈴、それぞれの良いところを答えなさい。\",\"questionType\":\"textarea\",\"maxlength\":\"60\",\"answers\":[{\"id\":\"1hm96ne460.775amghimmg\",\"value\":\"\\\"わたし：地面をはやく走れる、たくさんうたを知っている。小鳥：空をとべる 。鈴：きれいな音がでる。\"}],\"useAIScoring\":true},\"1hm96u0vg0.moigkhf00i8\":{\"parentId\":\"1hm93ni950.ik0rofhqnm\",\"question\":\"二次方程式の解の公式として、正しいものを選びなさい\",\"questionType\":\"radio\",\"options\":[{\"id\":\"1hm96ups80.98o1ddr9jb8\",\"value\":\"\\\\( x = \\\\frac{{-b \\\\pm \\\\sqrt{{b^2 - 4ac}}}}{{2a}} \\\\)\"},{\"id\":\"1hm96vdst0.ootdmltjbl8\",\"value\":\"\\\\( x = \\\\frac{{-b \\\\pm \\\\sqrt{{b^2 - 4a}}}}{{2a}} \\\\)\"},{\"id\":\"1hm96vts80.2rrnbrht2u8\",\"value\":\"\\\\( x = \\\\frac{{-a \\\\pm \\\\sqrt{{a^2 - 4bc}}}}{{2b}} \\\\)\"},{\"id\":\"1hm970kie0.1dmbndq2vb8\",\"value\":\"\\\\( x = \\\\frac{{-b \\\\pm \\\\sqrt{{-4ac}}}}{{2}} \\\\)\"}],\"canMultiple\":false,\"answers\":[{\"id\":\"1hm96uspj0.4v9lbdscdqo\",\"value\":\"\\\\( x = \\\\frac{{-b \\\\pm \\\\sqrt{{b^2 - 4ac}}}}{{2a}} \\\\)\"}]},\"1hm976noa0.eom49lrf12\":{\"parentId\":\"1hm93ni950.ik0rofhqnm\",\"question\":\"以下のうち、正しいものをすべて選びなさい。\",\"questionType\":\"radio\",\"options\":[{\"id\":\"1hm977lb30.u144e6gh1m\",\"value\":\"平安時代には、摂関政治が行われ、院政が確立した。\"},{\"id\":\"1hm977q9c0.ni9rktffulg\",\"value\":\"戦国時代には、室町幕府が全国統一を果たし、戦乱が終結した。\"},{\"id\":\"1hm9785e30.sda9mnoug3g\",\"value\":\"鎌倉時代には、源頼朝が征夷大将軍に任命され、幕府が成立した。\"},{\"id\":\"1hm97cra00.oj3lmdg0le\",\"value\":\"江戸時代には、江戸幕府が封建制度を確立し、全国の統治を行った。\"}],\"canMultiple\":true,\"answers\":[{\"id\":\"1hm97diui0.tl0d2bp9fj8\",\"value\":\"平安時代には、摂関政治が行われ、院政が確立した。\"},{\"id\":\"1hm97dpjs0.6146phhn7a8\",\"value\":\"鎌倉時代には、源頼朝が征夷大将軍に任命され、幕府が成立した。\"}]},\"1hm97ernh0.p99aviegceg\":{\"parentId\":\"1hm93ni950.ik0rofhqnm\",\"question\":\"プログラムに関する、以下の問題に答えなさい。\\n\",\"questionType\":\"nested\",\"childIds\":[\"1hm97p5m90.611rjie76f\",\"1hm9801a40.ug2m1luqhd\"]},\"1hm97p5m90.611rjie76f\":{\"parentId\":\"1hm97ernh0.p99aviegceg\",\"question\":\"```c\\nmain(void){\\n  print(\\\"hello, world\\\")\\n}\\n```\\nこのプログラムはどの言語で書かれたプログラムか\",\"questionType\":\"radio\",\"options\":[{\"id\":\"1hm97r8g90.d583a9k2nh\",\"value\":\"C言語\"},{\"id\":\"1hm97rd2s0.9q3nsbp9nig\",\"value\":\"Java\"},{\"id\":\"1hm97riu80.m770mb1ikuo\",\"value\":\"JavaScript\"},{\"id\":\"1hm97rnsr0.3oimientcao\",\"value\":\"Rust\"}],\"canMultiple\":false,\"answers\":[{\"id\":\"1hm97sbee0.v5ia06dld68\",\"value\":\"C言語\"}]},\"1hm9801a40.ug2m1luqhd\":{\"parentId\":\"1hm97ernh0.p99aviegceg\",\"question\":\"以下の数式の計算結果を答えなさい。\\n\\\\(3 \\\\times (4 + 2)\\\\)\",\"questionType\":\"textarea\",\"maxlength\":\"10\",\"answers\":[{\"id\":\"1hm9802rm0.03rc2hp0nmg\",\"value\":\"18\"}],\"useAIScoring\":false}},\"isEdit\":false}"
    }
  },
  {
    "model": "api.problem",
    "fields": {
      "workbook_id_id": 2,
      "problem_json": "{\"info\":{\"title\":\"「世界の首都」\"},\"questions\":{\"1hllaplef0.03q90s4stfo\":{\"questionType\":\"root\",\"title\":\"fake\",\"childIds\":[\"1hllarqha0.p2f1e80aa1g\"]},\"1hllarqha0.p2f1e80aa1g\":{\"parentId\":\"1hllaplef0.03q90s4stfo\",\"question\":\"次のうち、フランスの首都はどれですか？\",\"questionType\":\"radio\",\"options\":[{\"id\":\"1hllas2i30.sm2m3dntii8\",\"value\":\"フランス\"},{\"id\":\"1hllasais0.a6ete3cmbh\",\"value\":\"パリ\"},{\"id\":\"1hllascuv0.k2mihko82pg\",\"value\":\"ベルリン\"},{\"id\":\"1hllashum0.hm4bkphihf8\",\"value\":\"マドリード\"}],\"canMultiple\":false,\"answers\":[{\"id\":\"1hllassip0.0t898jbstbo\",\"value\":\"パリ\"}]}}}"
    }
  },
  {
    "model": "api.problem",
    "fields":{
      "workbook_id_id": 3,
      "problem_json":"{\"info\":{\"title\":\"Java 効果測定問題\",\"workbook_id\":\"6\"},\"questions\":{\"1hn4hecb70.tjv3gnoi77o\":{\"questionType\":\"root\",\"title\":\"fake\",\"childIds\":[\"1hn4hplrq0.8ube1ua6uvo\",\"1hn4kn27u0.7jrmlbe5l88\",\"1hn4o9j850.n6ahguvd178\",\"1hn4pi8k90.dqrd3arsu6o\",\"1hn4s3a5d0.41mocalolsg\"]},\"1hn4hplrq0.8ube1ua6uvo\":{\"parentId\":\"1hn4hecb70.tjv3gnoi77o\",\"question\":\"(15点)\\n三角形クラスのインスタンス生成し、面積の計算、表示をする未完成のプログラムがある。未完成プ\\nログラム中の（1）～（3）に入れる正しい答えを、解答群の中から選びなさい。\\n\\n実行結果：\\n```\\n底辺= 12.3 高さ = 45.5 面積 = 279.825 \\n                 変更後の面積 = 663.39\\n```\",\"questionType\":\"nested\",\"childIds\":[\"1hn4hq9t00.jldstmgje\",\"1hn4i8vn40.pd2jntapa5g\",\"1hn4j2dso0.9beo9kgtr58\"]},\"1hn4hq9t00.jldstmgje\":{\"parentId\":\"1hn4hplrq0.8ube1ua6uvo\",\"question\":\"```\\n(1)に入る答えを選びなさい。\\n未完成プログラム① ファイル名:Triangle.java\\n\\npackage kouka2;\\n// 三 角形クラス Triangle の定義\\nclass Triangle {\\n // フィールド定義\\n\\n private double bottom; // 底辺\\n private double height; // 高さ\\n\\n // コンストラクタ定義\\n public __(1)__(double bottom, double height) {\\n this.bottom = bottom;\\n this.height = height;\\n }\\n\\n // メソッド定義\\n // 底辺を返すゲッター\\n public double getBottom() {\\n return bottom;\\n }\\n // 高さを返すゲッター\\n public double getHeight() {\\n return height; \\n}\\n//セッター定義\\n //底辺をセットするセッター\\n public void setBottom(double num){\\n this.bottom = num;\\n }\\n //高さをセットするセッター\\n public void setHeight(double num){\\n this.height = num;\\n }\\n\\n // 面積を求めるメソッドの定義\\n // 引数なし\\n public double calcArea() {\\n // 三角形の面積を返す\\n return this.bottom * this.height / 2;\\n }\\n}\\n```\",\"questionType\":\"radio\",\"options\":[{\"id\":\"1hn4hrtjh0.5gjm3rek8k8\",\"value\":\"ア　triangle\"},{\"id\":\"1hn4hrupo0.fmge36do5go\",\"value\":\"イ　Triangle　\"},{\"id\":\"1hn4hrvpb0.9h4mkestgkg\",\"value\":\"ウ　constructor\"}],\"canMultiple\":false,\"answers\":[{\"id\":\"1hn4kfmnh0.ak87u1ro5p\",\"value\":\"イ　Triangle　\"}]},\"1hn4i8vn40.pd2jntapa5g\":{\"parentId\":\"1hn4hplrq0.8ube1ua6uvo\",\"question\":\"```\\n(2)に入る答えを選びなさい。\\n未完成プログラム②　ファイル名:kouka1.java\\n\\npackage kouka2;\\npublic class Kouka1 {\\n public static void main(String[] args) {\\n // コンストラクタによりインスタンスを生成\\n // 底辺を 12.3、高さを 45.5 とする\\n double bottom = 12.3;\\n double height = 45.5;\\n Triangle triangle = __(2)__;\\n // ゲッターを使 用して底辺を表示\\n System.out.println(\\\"底辺 = \\\" + triangle.getBottom()); \\n// ゲッターを使用して高さを表示\\n System.out.println(\\\"高さ = \\\" + triangle.getHeight());\\n // 面積を求めるメ ソッドを使用して面積を表示\\n System.out.println(\\\"面積 = \\\" + __(3)__);\\n // セッターを使用して底辺を 23.4、高さを 56.7 とする\\n triangle.setBottom(23.4);\\n triangle.setHeight(56.7);\\n // 底辺、高さを変更した後の三角形の面積を表示\\n System.out.println(\\\"変更後の面積 = \\\" +__(3)__);\\n } \\n```\",\"questionType\":\"radio\",\"options\":[{\"id\":\"1hn4j20pc0.asr4383kkuo\",\"value\":\"ア  new Triangle(); \"},{\"id\":\"1hn4j21lr0.43ipiu9db8\",\"value\":\"イ new Triangle(bottom,height); \"},{\"id\":\"1hn4j22ok0.0cre1qea0ug\",\"value\":\"ウ new triangle(); \"}],\"canMultiple\":false,\"answers\":[{\"id\":\"1hn4kiegt0.1ine2rohp6o\",\"value\":\"イ new Triangle(bottom,height); \"}]},\"1hn4j2dso0.9beo9kgtr58\":{\"parentId\":\"1hn4hplrq0.8ube1ua6uvo\",\"question\":\"```\\n(3)に入る答 えを選びなさい。\\n未完成プログラム②　ファイル名:kouka1.java\\n\\npackage kouka2;\\npublic class Kouka1 {\\n public static void main(String[] args) {\\n // コンストラクタによりインスタンスを生成\\n // 底辺を 12.3、高さを 45.5 とする\\n double bottom = 12.3;\\n double height = 45.5;\\n Triangle triangle = __(2)__;\\n // ゲッターを使用して底辺を表示\\n System.out.println(\\\"底辺 = \\\" + triangle.getBottom()); \\n// ゲッターを使用して高さを表示\\n System.out.println(\\\"高さ = \\\" + triangle.getHeight());\\n // 面積を求めるメソッドを使用して面積を表示\\n System.out.println(\\\"面積 = \\\" + __(3)__);\\n // セッターを使用して底辺を 23.4、高さを 56.7 とする\\n triangle.setBottom(23.4);\\n triangle.setHeight(56.7);\\n // 底辺、高さを変更した後の三角形の面積を表示\\n System.out.println(\\\"変更後の面積 = \\\" +__(3)__);\\n } \\n```\",\"questionType\":\"radio\",\"options\":[{\"id\":\"1hn4j2ebh0.9veeg33fa6g\",\"value\":\"ア Triangle.calcArea(); \"},{\"id\":\"1hn4j2vu80.72d28upmihg\",\"value\":\"イ Triangle.calcArea(bottom,height); \"},{\"id\":\"1hn4j319i0.tor2ecn1k78\",\"value\":\"ウ triangle.calcArea(); \"}],\"canMultiple\":false,\"answers\":[{\"id\":\"1hn4kjmkv0.d77b0o700mg\",\"value\":\"ウ triangle.calcArea(); \"}]},\"1hn4kn27u0.7jrmlbe5l88\":{\"parentId\":\"1hn4hecb70.tjv3gnoi77o\",\"question\":\"(15点)\\n人間クラスとそれを継承した日本人クラスを定義する。日本人クラスのインスタンスを作成し、挨拶メ\\nソッドを実行する未完成のプログラムがある。プログラム中の（1）～（4）に入れる正しい答えを、解答群\\nの中から選びなさい。\\n\\n実行結果: ``` \\nこんにちは\\n私は、鈴木　一郎 です。\\n年齢は、28です。\\n日本人です。\\n```\",\"questionType\":\"nested\",\"childIds\":[\"1hn4kv8ua0.dled19717qo\",\"1hn4m3i140.65rv8sthuq8\",\"1hn4mtcrs0.794clnf6lq\",\"1hn4n22a60.vabarlu22e8\"]},\"1hn4kv8ua0.dled19717qo\":{\"parentId\":\"1hn4kn27u0.7jrmlbe5l88\",\"question\":\"(1)に入る答えを選びなさい。\\n未完成プログラム①　ファイル名:Human.java\\n```\\npackage kouka2;\\n/**\\n 人間クラス 定義\\n*/\\npublic class Human {\\n // フィールド定義\\n protected String name; // 名前\\n protected int age; // 年齢\\n // コンストラクタ定義\\n public Human(String name, int age) {\\n this.name = name;\\n this.age = age;\\n }\\n // メソッド定義\\n// 挨拶を表示するメソッド\\n public void greeting() {\\n System.out.println(\\\"Hello.\\\");\\n }\\n // 自己紹介するメソッド\\n public void introduction() {\\n // 挨拶する\\n greeting();\\n // 名前と年齢を表示する\\n System.out.println(\\\"私は、\\\" + this.name + \\\"です。\\\");\\n System.out.println(\\\"年齢は、\\\" + this.age + \\\"です。\\\");\\n }\\n}\\n```\\n\\n未完成プログラム②　ファイル名:Japanese.java\\n```\\npackage kouka2;\\n/**\\n 日本人クラスの定義\\n*/\\npublic class Japanese __(1)__ Human {\\n // フィールド定義\\n protected String nation = \\\"日本人\\\"; //国籍\\n // コンストラクタ定義\\n public Japanese(String name, int age) {\\n // 親クラスのコンストラクタを呼び出して名前と年齢を設定する\\n super(name, age);\\n }\\n // メソッド定義\\n // 挨拶を表示するメソッド（オーバーライド）\\n public void __(2)__ () {\\n // 日本語の挨拶をする\\n System.out.println(\\\"こんにちは\\\");\\n }\\n // 自己紹介するメソッド（オーバーライド）\\n public void introduction() {\\n // 親クラスの introduction メソッドを呼び出す\\n __(3)__.introduction();\\n // 国籍を表示する\\n System.out.println(this.nation + \\\"です。\\\");\\n }\\n} \\n```\\n未完成プログラム③ ファイル名:kouka2.java\\n```\\npackage kouka2;\\npublic class Kouka2 {\\n public static void main(String[] args) {\\n// コンストラクタを呼び出し Japanease インスタンスを生成\\n Human suzuki = __(4)__ (\\\"鈴木 一郎\\\", 28);\\n // suzuki インスタンスの introduction メソッドを呼び出す\\n suzuki.introduction();\\n }\\n}\\n```\",\"questionType\":\"radio\",\"options\":[{\"id\":\"1hn4lu4i30.sjsr6ql48d8\",\"value\":\"ア extends \"},{\"id\":\"1hn4lu5g30.t302dgma0f\",\"value\":\"イ extend \"},{\"id\":\"1hn4lu6ja0.a2oh9e8h1pg\",\"value\":\"ウ implements\"},{\"id\":\"1hn4m1olg0.b0f1vg6uscg\",\"value\":\"エ implement \"}],\"canMultiple\":false,\"answers\":[{\"id\":\"1hn4mmgdv0.nogqjbkgtl\",\"value\":\"ア extends \"}]},\"1hn4m3i140.65rv8sthuq8\":{\"parentId\":\"1hn4kn27u0.7jrmlbe5l88\",\"question\":\"(2)に入る答えを選びなさい。\\n未完成プログラム①　ファイル名:Human.java\\n```\\npackage kouka2;\\n/**\\n 人間クラス定義\\n*/\\npublic class Human {\\n // フィールド定義\\n protected String name; // 名前\\n protected int age; // 年齢\\n // コンストラクタ定義\\n public Human(String name, int age) {\\n this.name = name;\\n this.age = age;\\n }\\n // メソッド定義\\n// 挨拶を表示するメソッド\\n public void greeting() {\\n System.out.println(\\\"Hello.\\\");\\n }\\n // 自己紹介するメソッド\\n public void introduction() {\\n // 挨拶する\\n greeting();\\n // 名前と年 齢を表示する\\n System.out.println(\\\"私は、\\\" + this.name + \\\"です。\\\");\\n System.out.println(\\\"年齢は、\\\" + this.age + \\\"です。\\\");\\n }\\n}\\n```\\n\\n未完成プログラム②　ファイル名:Japanese.java\\n```\\npackage kouka2;\\n/**\\n 日本人クラスの定義\\n*/\\npublic class Japanese __(1)__ Human {\\n // フィールド定義\\n protected String nation = \\\"日本人\\\"; //国籍\\n // コンストラクタ定義\\n public Japanese(String name, int age) {\\n // 親クラスのコンストラクタを呼び出して名前と年齢を設定する\\n super(name, age);\\n }\\n // メソッド定義\\n // 挨拶を表示するメソッド（オーバ ーライド）\\n public void __(2)__ () {\\n // 日本語の挨拶をする\\n System.out.println(\\\"こんにちは\\\");\\n }\\n // 自己紹介するメソッド（オーバーライド）\\n public void introduction() {\\n // 親クラスの introduction メソッドを呼び出す\\n __(3)__.introduction();\\n // 国籍を表示する\\n System.out.println(this.nation + \\\"です。\\\");\\n }\\n} \\n```\\n未完成プログラム③ ファイル名:kouka2.java\\n```\\npackage kouka2;\\npublic class Kouka2 {\\n public static void main(String[] args) {\\n// コンストラクタを呼び出し Japanease インスタンスを生成\\n Human suzuki = __(4)__ (\\\"鈴木 一郎\\\", 28);\\n // suzuki インスタンスの introduction メソッドを呼び出す\\n suzuki.introduction();\\n }\\n}\\n```\",\"questionType\":\"radio\",\"options\":[{\"id\":\"1hn4mp1fr0.vavn9quirlg\",\"value\":\"ア superGreeting \"},{\"id\":\"1hn4mp2rb0.16so96ieut8\",\"value\":\"イ parentGreeting\"},{\"id\":\"1hn4mp48k0.r9t50knpmd\",\"value\":\"ウ greeting\"},{\"id\":\"1hn4mp5ov0.k6qp5p7cbvo\",\"value\":\"エ super.greeting \"}],\"canMultiple\":false,\"answers\":[{\"id\":\"1hn4ms3060.uk72a7c3mj\",\"value\":\"ウ greeting\"}]},\"1hn4mtcrs0.794clnf6lq\":{\"parentId\":\"1hn4kn27u0.7jrmlbe5l88\",\"question\":\"(3) に入る答えを選びなさい。\\n未完成プログラム①　ファイル名:Human.java\\n```\\npackage kouka2;\\n/**\\n 人間クラス定義\\n*/\\npublic class Human {\\n // フィールド定義\\n protected String name; // 名前\\n protected int age; // 年齢\\n // コンストラクタ定義\\n public Human(String name, int age) {\\n this.name = name;\\n this.age = age;\\n }\\n // メソッド定義\\n// 挨拶を表示するメソッド\\n public void greeting() {\\n System.out.println(\\\"Hello.\\\");\\n }\\n // 自己紹介するメソッド\\n public void introduction() {\\n // 挨拶する\\n greeting();\\n // 名前と年齢を表示する\\n System.out.println(\\\"私は、\\\" + this.name + \\\"です。\\\");\\n System.out.println(\\\"年齢は、\\\" + this.age + \\\"です。\\\");\\n }\\n}\\n```\\n\\n未完成プログラム②　ファイル名:Japanese.java\\n```\\npackage kouka2;\\n/**\\n 日本人クラスの定義\\n*/\\npublic class Japanese __(1)__ Human {\\n // フィールド定義\\n protected String nation = \\\"日本人\\\"; //国籍\\n // コンストラクタ定義\\n public Japanese(String name, int age) {\\n // 親クラスのコンストラクタを呼び出して名前と年齢を設定する\\n super(name, age);\\n }\\n // メソッド定義\\n // 挨拶を表示するメソッド（オーバーライド）\\n public void __(2)__ () {\\n // 日本語の挨拶をする\\n System.out.println(\\\"こんにちは\\\");\\n }\\n // 自己紹介するメソッド（オーバーライド）\\n public void introduction() {\\n // 親クラスの introduction メソッドを呼び出 す\\n __(3)__.introduction();\\n // 国籍を表示する\\n System.out.println(this.nation + \\\"です。\\\");\\n }\\n} \\n```\\n未完成プログラム③ ファイル名:kouka2.java\\n```\\npackage kouka2;\\npublic class Kouka2 {\\n public static void main(String[] args) {\\n// コンストラクタを呼び出し Japanease インスタンスを生成\\n Human suzuki = __(4)__ (\\\"鈴木 一郎\\\", 28);\\n // suzuki インスタンスの introduction メソッドを呼び出す\\n suzuki.introduction();\\n }\\n}\\n```\",\"questionType\":\"radio\",\"options\":[{\"id\":\"1hn4mus0j0.e8hceum8jog\",\"value\":\"ア supers \"},{\"id\":\"1hn4mut6m0.0tk8l7g58og\",\"value\":\"イ parents \"},{\"id\":\"1hn4muur50.fb8hk7pmrao\",\"value\":\"ウ super\"},{\"id\":\"1hn4mv05m0.bfq785b18q\",\"value\":\"エ superClass \"}],\"canMultiple\":false,\"answers\":[{\"id\":\"1hn4n4oo10.ou49uo6qh6g\",\"value\":\"ウ super\"}]},\"1hn4n22a60.vabarlu22e8\":{\"parentId\":\"1hn4kn27u0.7jrmlbe5l88\",\"question\":\"(4)に入る答えを選びなさい。\\n未完成プログラム①　ファイル名:Human.java\\n```\\npackage kouka2;\\n/**\\n 人間クラス定義\\n*/\\npublic class Human {\\n // フィールド定義\\n protected String name; // 名前\\n protected int age; // 年齢\\n // コンストラクタ定義\\n public Human(String name, int age) {\\n this.name = name;\\n this.age = age;\\n }\\n // メソッド定義\\n// 挨拶を表示するメソッド\\n public void greeting() {\\n System.out.println(\\\"Hello.\\\");\\n }\\n // 自己紹介するメソッド\\n public void introduction() {\\n // 挨拶する\\n greeting();\\n // 名前と年齢を表示する\\n System.out.println(\\\"私は、\\\" + this.name + \\\"です。\\\");\\n System.out.println(\\\"年齢は、\\\" + this.age + \\\"です。\\\");\\n }\\n}\\n```\\n\\n未完成プログラム②　ファイル名:Japanese.java\\n```\\npackage kouka2;\\n/**\\n 日本人クラスの定義\\n*/\\npublic class Japanese __(1)__ Human {\\n // フィールド定義\\n protected String nation = \\\"日本人\\\"; //国籍\\n // コンストラクタ定義\\n public Japanese(String name, int age) {\\n // 親クラスのコンストラクタを呼び出して名前と年齢を設定する\\n super(name, age);\\n }\\n // メソッド定義\\n // 挨拶を表示するメソッド（オーバーライド）\\n public void __(2)__ () {\\n // 日本語の挨拶をする\\n System.out.println(\\\"こん にちは\\\");\\n }\\n // 自己紹介するメソッド（オーバーライド）\\n public void introduction() {\\n // 親クラスの introduction メソッドを呼び出す\\n __(3)__.introduction();\\n // 国籍を表示する\\n System.out.println(this.nation + \\\"です。\\\");\\n }\\n} \\n```\\n未完成プログラム③ ファイル名:kouka2.java\\n```\\npackage kouka2;\\npublic class Kouka2 {\\n public static void main(String[] args) {\\n// コンストラクタを呼び出し Japanease インスタンスを生成\\n Human suzuki = __(4)__ (\\\"鈴木 一郎\\\", 28);\\n // suzuki インスタンスの introduction メソッドを呼び出す\\n suzuki.introduction();\\n }\\n}\\n```\",\"questionType\":\"radio\",\"options\":[{\"id\":\"1hn4n2jde0.6k0maa67r3\",\"value\":\"ア new Human \"},{\"id\":\"1hn4n2kqg0.sokegkruhr8\",\"value\":\"イ new Japanese\"},{\"id\":\"1hn4n2lns0.cbleeos60tg\",\"value\":\"ウ new Human extended Japanese \"},{\"id\":\"1hn4n2mkt0.2k7ge8sqij8\",\"value\":\"エ new Japanese extended Human\"}],\"canMultiple\":false,\"answers\":[{\"id\":\"1hn4n5tu40.p6s60djv48\",\"value\":\"ア new Human \"}]},\"1hn4o9j850.n6ahguvd178\":{\"parentId\":\"1hn4hecb70.tjv3gnoi77o\",\"question\":\"(15点)\\n図形抽象クラスとそれを継承した三角形クラス、円クラスを作成する。実行クラスで、底辺の長さ\\n10.5、高さ 5.0 の三角形クラス、半径8.4 の円クラスのインスタンスを生成し、それぞれの面積など\\nのデータを表示する未完成プログラムがある。プログラム中の（1）～（3）の空欄を埋めて、プログラムを\\n完成させなさい。\\n\\n実行結果:\\n```\\nこの図形は三角形です。\\nこの図形の底辺は10.5です。\\nこの図形の高さは5.0です。\\nこの図形の面積は26.25です。\\nこの図形は円です。\\n この図形の半径は8.4です。\\nこの図形の面積は221.67です。\\n```\",\"questionType\":\"nested\",\"childIds\":[\"1hn4obo700.84b6tf35eeo\",\"1hn4oku900.emotkbafcn8\",\"1hn4p8r340.fkkl5reioe8\"]},\"1hn4obo700.84b6tf35eeo\":{\"parentId\":\"1hn4o9j850.n6ahguvd178\",\"question\":\"(1)を埋めなさい。\\n未完成プログラム①　ファイル名:AbsShape.java\\n```\\npackage kouka2;\\n/**\\n 図形抽象クラスの定義\\n*/\\n__(1)__ class AbsShape {\\n // フィールド定義\\n // 図形の種類\\n private int shapeType;\\n private String[] shapeTypeStr = {\\\"三角形\\\",\\\"四角形\\\",\\\"円\\\"};\\n // この図形の種類の文字列を 返却するメソッド\\n String getShapeTypeStr(){\\n return shapeTypeStr[shapeType];\\n }; \\n// shapeType のセッター\\n void setShapeType(int num){\\n shapeType = num;\\n }\\n // shapeType のゲッター\\n int getShapeType(){\\n return shapeType;\\n };\\n // 抽象メソッド定義\\n // 面積を計算して返却する抽象メソッド\\n __(1)__ double calcArea();\\n // 図形のデータを表示する抽象メソッド\\n __(1)__ void displayData();\\n} \\n```\",\"questionType\":\"textarea\",\"maxlength\":\"60\",\"answers\":[{\"id\":\"1hn4ogd8l0.cf0o626cnmg\",\"value\":\"abstract\"}],\"useAIScoring\":true},\"1hn4oku900.emotkbafcn8\":{\"parentId\":\"1hn4o9j850.n6ahguvd178\",\"question\":\"(2)を埋めなさい。\\n未完成プログラム②　ファイル名:Triangle.java\\n```\\npackage kouka2;\\n/**\\n 三角形クラスの定義\\n*/\\npublic class Triangle __(2)__ {\\n // フィールド定義\\n private double bottom; //底辺\\n private double height; //高さ\\n// コンストラクタ定義\\n public Triangle(double bottom,double height) {\\n // 抽象クラスから継 承された shapeType に三角形を意味する 0 を代入する\\n this.setShapeType(0);\\n // 底辺を代入\\n this.bottom = bottom;\\n // 高さを代入\\n this.height = height;\\n }\\n //ゲッターとセッターを定義\\n public double getBottom() {\\n return bottom;\\n }\\n public double getHeight() {\\n return height;\\n }\\n public void setBottom(double bottom) {\\n this.bottom = bottom;\\n }\\n public void setHeight(double height) {\\n this.height = height;\\n }\\n // 抽象メソッドのオーバーライド\\n // 面積を計算して返却する\\n public double calcArea(){\\n //三角形の面積の求め方は、底辺×高さ÷2\\n//小数点第3 位を四捨五入する\\n return Math.round((bottom * height / 2) * 100) / 100.0;\\n };\\n // 図形のデータを表示するメソッド\\n public void displayData() {\\n System.out.println(\\\"この図形は\\\" + __(3)__ + \\\"です。\\\");\\n System.out.println(\\\"この図形の底辺は\\\" + this.getBottom() + \\\"です。\\n\\\");\\n System.out.println(\\\"この図形の高さは\\\" + this.getHeight() + \\\"です。\\n\\\");\\n System.out.println(\\\"この図形の面積は\\\" + this.calcArea() + \\\"です。\\n\\\");\\n }\\n}\\n```\\n未完成プログラム③　ファイル名:Circle.java\\n```\\npackage kouka2;\\nimport java.lang.Math;\\n/**\\n 円クラスの定義\\n*/\\npublic class Circle __(2)__ {\\n // フィールド定義\\n private double rad; //半径\\n// コンストラクタ定義\\n public Circle(double rad) {\\n // 抽象クラスから継承された shapeType に円を意味する 2 を代入する\\n this.setShapeType(2);\\n // 半径を代入\\n this.rad = rad;\\n }\\n //ゲッターとセッターを定義\\n public double getRad() {\\n return rad;\\n }\\n public void setRad(double rad) {\\n this.rad = rad;\\n }\\n // 抽象メソッドのオーバーライド\\n // 面積を計算して返却する\\n public double calcArea(){\\n //円の面積の求め方は、半径×半径×円周率\\n //小数点第3 位を四捨五入す る\\n return Math.round((Math.pow(rad, 2) * Math.PI) * 100) / 100.0;\\n };\\n // 図形のデータを表示するメソッド\\n public void displayData() {\\n System.out.println(\\\"この図形は\\\" + __(3)__ + \\\"です。\\\"); \\nSystem.out.println(\\\"この図形の半径は\\\" + this.getRad() + \\\"です。\\\");\\n System.out.println(\\\"この図形の面積は\\\" + this.calcArea() + \\\"です。\\n\\\");\\n }\\n} \\n```\\n未完成プログラム④ ファイル名:kouka3.java\\n```\\npackage kouka2;\\npublic class Kouka3 {\\n public static void main(String[] args) {\\n // 底辺10.5 高さ 5.0 の triangle インスタンスを生成\\n AbsShape triangle = new Triangle(10.5, 5.0);\\n // 半径8.4 の Circle インスタンスを生成\\n AbsShape circle = new Circle(8.4);\\n // triangle インスタンスの displayData メソッドを呼び出す\\n triangle.displayData();\\n // circle インスタンスの displayData メソッドを呼び出す\\n circle.displayData();\\n }\\n} \\n```\",\"questionType\":\"textarea\",\"maxlength\":\"60\",\"answers\":[{\"id\":\"1hn4p7s200.ctsa891t7n\",\"value\":\"extends\"}],\"useAIScoring\":true},\"1hn4p8r340.fkkl5reioe8\":{\"parentId\":\"1hn4o9j850.n6ahguvd178\",\"question\":\"(3)を埋めなさい。\\n未完成プログラム②　ファイル名:Triangle.java\\n```\\npackage kouka2;\\n/**\\n 三角形クラスの定義\\n*/\\npublic class Triangle __(2)__ {\\n // フィールド定義\\n private double bottom; //底辺\\n private double height; //高さ\\n// コンストラ クタ定義\\n public Triangle(double bottom,double height) {\\n // 抽象クラスから継承された shapeType に三角形を意味する 0 を代入する\\n this.setShapeType(0);\\n // 底辺を代入\\n this.bottom = bottom;\\n // 高さを代入\\n this.height = height;\\n }\\n //ゲッターとセッターを定義\\n public double getBottom() {\\n return bottom;\\n }\\n public double getHeight() {\\n return height;\\n }\\n public void setBottom(double bottom) {\\n this.bottom = bottom;\\n }\\n public void setHeight(double height) {\\n this.height = height;\\n }\\n // 抽象メソッドのオーバーライド\\n // 面積を計算して返却する\\n public double calcArea(){\\n //三角形の面積の求め方は、底辺×高さ÷2\\n//小数点第3 位を四捨五入する\\n return Math.round((bottom * height / 2) * 100) / 100.0;\\n };\\n // 図形のデータを表示するメソッド\\n public void displayData() {\\n System.out.println(\\\"この図形は\\\" + __(3)__ + \\\"です。\\\");\\n System.out.println(\\\"この図形の底辺は\\\" + this.getBottom() + \\\"です。\\n\\\");\\n System.out.println(\\\"この図形の高さは\\\" + this.getHeight() + \\\"です。\\n\\\");\\n System.out.println(\\\"この図形の面積は\\\" + this.calcArea() + \\\"です。\\n\\\");\\n }\\n}\\n```\\n未完成プログラム③ 　ファイル名:Circle.java\\n```\\npackage kouka2;\\nimport java.lang.Math;\\n/**\\n 円クラスの定義\\n*/\\npublic class Circle __(2)__ {\\n // フィールド定義\\n private double rad; //半径\\n// コンストラクタ定義\\n public Circle(double rad) {\\n // 抽象クラスから継承された shapeType に円を意味する 2 を代入する\\n this.setShapeType(2);\\n // 半径を代入\\n this.rad = rad;\\n }\\n //ゲッターとセッタ ーを定義\\n public double getRad() {\\n return rad;\\n }\\n public void setRad(double rad) {\\n this.rad = rad;\\n }\\n // 抽象メソッドのオーバーライド\\n // 面積を計算して返却する\\n public double calcArea(){\\n //円の面積の求め方は、半径×半径×円周率\\n //小数点第3 位を四捨五入する\\n return Math.round((Math.pow(rad, 2) * Math.PI) * 100) / 100.0;\\n };\\n // 図形のデータを表示するメソッド\\n public void displayData() {\\n System.out.println(\\\"この図形は\\\" + __(3)__ + \\\"です。\\\"); \\nSystem.out.println(\\\"この図形の半径は\\\" + this.getRad() + \\\"です。\\\");\\n System.out.println(\\\"この図形の面積は\\\" + this.calcArea() + \\\"です。\\n\\\");\\n }\\n} \\n```\\n未完成プログラム④ ファイル名:kouka3.java\\n```\\npackage kouka2;\\npublic class Kouka3 {\\n public static void main(String[] args) {\\n // 底辺10.5 高さ 5.0 の triangle インスタンスを生成\\n AbsShape triangle = new Triangle(10.5, 5.0);\\n // 半径8.4 の Circle インスタンスを生成\\n AbsShape circle = new Circle(8.4);\\n // triangle インスタンスの displayData メソッドを呼び出す\\n triangle.displayData();\\n // circle インスタンスの displayData メソッドを呼び出す\\n circle.displayData();\\n }\\n} \\n```\",\"questionType\":\"textarea\",\"maxlength\":\"60\",\"answers\":[{\"id\":\"1hn4p9ao40.li1leuh57to\",\"value\":\" getShapeTypeStr()\"}],\"useAIScoring\":true},\"1hn4pi8k90.dqrd3arsu6o\":{\"parentId\":\"1hn4hecb70.tjv3gnoi77o\",\"question\":\"(20点)\\nアプリ向けのインターフェースとそれに則って実装したメモアプリ、電卓アプリと、それらを実行する未完\\n成のプログラムがある。プログラム中の（1）～（4）の空欄を埋めて、プログラムを完成させなさい。\\n\\n実行結果：メモアプリを起動した場合\\n```\\n起動したいアプリを選択してください:memo\\nメモアプリを起動します！\\nメモの内容を書いて、エンターキー\\n終了する場合はendと入力してください:\\naiueo\\n現在のメモの中身は・・・\\naiueo\\nメモの内容を書いて、エンターキー\\n終了する場合はendと入力してください:\\nend\\nメモアプリを終了します。\\n```\\n実行結果:電卓 アプリを起動した場合\\n```\\n起動したいアプリを選択してください:calc\\n電卓アプリを起動します！\\n足し算モード:+\\n引き算モード:-\\n掛け算モード:*\\n割り算モード:/\\n終了:endと入力してください:+\\n足し算モード\\n数字を入力してください: 3.4\\n数字を入力してください:10.7\\n3.4+10.7 =14.1\\n------------------------------------------------------------------------------------------------------\\n足し算モード:+\\n引き算モード:-\\n掛け算モード:*\\n割り算モード:/\\n終了:endと入力してください:end\\n電卓アプリを終了します。\\n```\",\"questionType\":\"nested\",\"childIds\":[\"1hn4qvccg0.j9shpodgq5o\",\"1hn4rogdj0.dvmi29jgqk\",\"1hn4ro8ab0.3mad99nb5qg\",\"1hn4ro00u0.s50u2q773tg\"]},\"1hn4qvccg0.j9shpodgq5o\":{\"parentId\":\"1hn4pi8k90.dqrd3arsu6o\",\"question\":\"(1)を埋めなさい。\\n未完成プログラム①　IFApp.java\\n```\\npackage kouka2;\\n// App インタフェースの定義\\n// アプリ用のインターフェース\\npublic __(1)__ IFApp {\\n // 抽象メソッド startUp の定義\\n // アプリの起動\\n public __(2)__ void startUp();\\n // 抽象メソッド end の定義\\n // アプリの終了\\n public __(2)__ void end();\\n}\\n```\\n未完成プログラム② ファイル名：memoApp.java \\n```\\npackage kouka2;\\nimport java.util.Scanner;\\n// メモアプリ\\npublic class memoApp __(3)__ {\\n private StringBuilder memo;\\n Scanner stdIn = new Scanner(System.in);\\n // コンストラクタ定義\\n public memoApp() {\\n this.memo = new StringBuilder();\\n }\\n// メソッド定義 抽象メソッドのオーバーライド\\n // アプリの起動 startUp メソッド\\n public void startUp() {\\n System.out.println(\\\"メモアプリを起動します！\\\");\\n //アプリの本機能である、memo メソッドを呼び出す\\n memo();\\n }\\n // アプリの起動 end メソッド\\n public void end() {\\n System.out.println(\\\"メモアプリを終了します。\\\");\\n //memo の中身を初期化する\\n memo = new StringBuilder();\\n }\\n // メソッド定義\\n // メモ機能の実装 ココから下は実際にメモをする処理が書いてあるだけです。\\n //問題を解くうえでは必要ありませんので、読まなくて大丈夫です。\\n public void memo(){\\n //実際アプリを作るときには、このメソッドの中に機能を実装する\\n //今回は簡易的な実装とする\\n System.out.println(\\\"メモの内容を書いて、エンターキー ¥n 終了する場合は\\nend と入力し て下さい:\\\");\\nString str = stdIn.nextLine();\\n if(str.equals(\\\"end\\\")){\\n this.end();\\n return;\\n }\\n memo.append(str);\\n System.out.println(\\\"現在のメモの中身は・・・\\\");\\n System.out.println(memo.toString());\\n this.memo();\\n }\\n} \\n```\\n未完成プログラム③ ファイル名：calcApp.java \\n```\\npackage kouka2;\\nimport java.util.Scanner;\\n// 電卓アプリ\\npublic class calcApp __(3)__ {\\n Scanner stdIn = new Scanner(System.in);\\n // メソッド定義 抽象メソッドのオーバーライド\\n // アプリの起動 startUp メソッド\\n public void startUp() {\\n System.out.println(\\\"電卓アプリを起動します！\\\");\\n //アプリの本機能である、calc メソッドを呼び出す\\n calc();\\n } \\n// アプリの起動 end メソッド\\n public void end() {\\n System.out.println(\\\"電卓アプリを終了します。\\\");\\n }\\n // メソッド定義\\n // 電卓機能の実装 ココから下は実際に計算する処理が書いてあるだけです。\\n //問題を解くうえでは必要ありませんので、読まなくて大丈夫です。\\n //早く終わった人は計算の処理 を短くできないかチャレンジしてください。\\n public void calc(){\\n //実際アプリを作るときには、このメソッドの中に機能を実装する\\n //今回は簡易的な実装とする\\n System.out.print(\\\" 足し算モード:+ ¥n 引き算モード:- ¥n 掛け算モード:*\\n¥n 割り算モード:/ ¥n 終了:end と入力して下さい:\\\");\\n switch(stdIn.nextLine()){\\n case \\\"+\\\":\\n plus();\\n break;\\n case \\\"-\\\":\\n minus();\\n break;\\n case \\\"*\\\":\\n multi();\\n break;\\n case \\\"/\\\":\\n div();\\n break;\\n case \\\"end\\\":\\nend();\\n return;\\n default:\\n System.out.println(\\\"不明なコマンドです。\\\");\\n }\\n System.out.println(\\\"-------------------------------------------\\n---------------------------\\\");\\n this.calc();\\n }\\n //各計算メソッド\\n public void plus(){\\n System.out.println(\\\"足し算モ ード\\\");\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num1 = Double.parseDouble(stdIn.nextLine());\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num2 = Double.parseDouble(stdIn.nextLine());\\n System.out.println(num1+\\\"+\\\"+num2+\\\"=\\\"+(num1+num2));\\n }\\n public void minus(){\\n System.out.println(\\\"引き算モード\\\");\\n System.out.print(\\\"数 字を入力してください：\\\");\\n double num1 = Double.parseDouble(stdIn.nextLine());\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num2 = Double.parseDouble(stdIn.nextLine());\\n System.out.println(num1+\\\"-\\\"+num2+\\\"=\\\"+(num1-num2));\\n } \\npublic void multi(){\\n System.out.println(\\\"掛け算モード\\\");\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num1 = Double.parseDouble(stdIn.nextLine());\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num2 = Double.parseDouble(stdIn.nextLine());\\n System.out.println(num1+\\\"*\\\"+num2+\\\"=\\\"+(num1*num2));\\n }\\n public void div(){\\n System.out.println(\\\"割り算モード\\\");\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num1 = Double.parseDouble(stdIn.nextLine());\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num2 = Double.parseDouble(stdIn.nextLine());\\n System.out.println(num1+\\\"/\\\"+num2+\\\"=\\\"+(num1/num2));\\n }\\n} \\n```\\n未完成プログラム④ ファイル名：Kouka4.java\\n```\\npackage kouka2;\\nimport java.util.Scanner;\\npublic class Kouka4 {\\n public static void main(String[] args) {\\n //この main メソッドがスマホ本体 の制御をしているイメージ\\n //入力されたコマンドによって、起動するアプリを選択する\\n Scanner stdIn = new Scanner(System.in);\\n // アプリのインスタンスを管理する変数app を宣言する\\n __(4)__ app;\\n //ユーザーに起動するアプリを選択してもらう\\n System.out.print(\\\"起動したいアプリを選択してください:\\\");\\n switch(stdIn.nextLine()){\\n case \\\"memo\\\":\\n //メモアプリのインスタンスを生成す る\\n app = new memoApp();\\n //メモアプリを起動する\\n app.startUp();\\n break;\\n case \\\"calc\\\":\\n //電卓アプリのインスタンスを生成する\\n app = new calcApp();\\n //電卓アプリを起動する\\n app.startUp(); \\nSystem.out.println(\\\"そんなアプリは存在しません。\\\");\\n }\\n }\\n}\\n```\",\"questionType\":\"textarea\",\"maxlength\":\"60\",\"answers\":[{\"id\":\"1hn58h5090.htcmvsc7ec\",\"value\":\"interface\"}],\"useAIScoring\":true},\"1hn4ro00u0.s50u2q773tg\":{\"parentId\":\"1hn4pi8k90.dqrd3arsu6o\",\"question\":\"(4)を埋めなさい。\\n未完成プログラム①　IFApp.java\\n```\\npackage kouka2;\\n// App インタフェースの定義\\n// アプリ用のインターフェース\\npublic __(1)__ IFApp {\\n // 抽象メソッド startUp の定義\\n // アプリの起動\\n public __(2)__ void startUp();\\n // 抽象メソッド end  の定義\\n // アプリの終了\\n public __(2)__ void end();\\n}\\n```\\n未完成プログラム② ファイル名：memoApp.java \\n```\\npackage kouka2;\\nimport java.util.Scanner;\\n// メモアプリ\\npublic class memoApp __(3)__ {\\n private StringBuilder memo;\\n Scanner stdIn = new Scanner(System.in);\\n // コンストラクタ定義\\n public memoApp() {\\n this.memo = new StringBuilder();\\n }\\n// メソッド定義 抽象 メソッドのオーバーライド\\n // アプリの起動 startUp メソッド\\n public void startUp() {\\n System.out.println(\\\"メモアプリを起動します！\\\");\\n //アプリの本機能である、memo メソッドを呼び出す\\n memo();\\n }\\n // アプリの起動 end メソッド\\n public void end() {\\n System.out.println(\\\"メモアプリを終了します。\\\");\\n //memo の中身を初期化する\\n memo = new StringBuilder();\\n }\\n // メ ソッド定義\\n // メモ機能の実装 ココから下は実際にメモをする処理が書いてあるだけです。\\n //問題を解くうえでは必要ありませんので、読まなくて大丈夫です。\\n public void memo(){\\n //実際アプリを作るときには、このメソッドの中に機能を実装する\\n //今回は簡易的な実装とする\\n System.out.println(\\\"メモの内容を書いて、エンターキー ¥n 終了する場合は\\nend と入力して下さい:\\\");\\nString str = stdIn.nextLine();\\n if(str.equals(\\\"end\\\")){\\n this.end();\\n return;\\n }\\n memo.append(str);\\n System.out.println(\\\"現在のメモの中身は・・・\\\");\\n System.out.println(memo.toString());\\n this.memo();\\n }\\n} \\n```\\n未完成プログラム③ ファイル名：calcApp.java \\n```\\npackage kouka2;\\nimport java.util.Scanner;\\n// 電卓アプリ\\npublic class calcApp __(3)__ {\\n Scanner stdIn = new Scanner(System.in);\\n // メソッド定義 抽象メソッドのオーバーライド\\n // アプリの起動 startUp メソッド\\n public void startUp() {\\n System.out.println(\\\"電卓アプリを起動します！\\\");\\n //アプリの 本機能である、calc メソッドを呼び出す\\n calc();\\n } \\n// アプリの起動 end メソッド\\n public void end() {\\n System.out.println(\\\"電卓アプリを終了します。\\\");\\n }\\n // メソッド定義\\n // 電 卓機能の実装 ココから下は実際に計算する処理が書いてあるだけです。\\n //問題を解くうえでは必要ありませんので、読まなくて大丈夫です。\\n //早く終わった人は計算の処理を短くできないかチャレンジしてください。\\n public void calc(){\\n //実際アプリを作るときには、このメソッドの中に機能を実装する\\n //今回は簡易的な実装とする\\n System.out.print(\\\" 足し算モード:+ ¥n 引き算モード:- ¥n 掛け算モード:*\\n¥n 割り算モード:/ ¥n 終了:end と入力して下さい:\\\");\\n switch(stdIn.nextLine()){\\n case \\\"+\\\":\\n plus();\\n break;\\n case \\\"-\\\":\\n minus();\\n break;\\n case \\\"*\\\":\\n multi();\\n break;\\n case \\\"/\\\":\\n div();\\n break;\\n case \\\"end\\\":\\nend();\\n return;\\n default:\\n System.out.println(\\\"不明なコマンドです。\\\");\\n }\\n System.out.println(\\\"-------------------------------------------\\n---------------------------\\\");\\n this.calc();\\n }\\n //各計算メソッド\\n public void plus(){\\n System.out.println(\\\"足し算モード\\\");\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num1 = Double.parseDouble(stdIn.nextLine());\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num2 = Double.parseDouble(stdIn.nextLine());\\n System.out.println(num1+\\\"+\\\"+num2+\\\"=\\\"+(num1+num2));\\n }\\n public void minus(){\\n System.out.println(\\\"引き算モード\\\");\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num1 = Double.parseDouble(stdIn.nextLine());\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num2 = Double.parseDouble(stdIn.nextLine());\\n System.out.println(num1+\\\"-\\\"+num2+\\\"=\\\"+(num1-num2));\\n } \\npublic void multi(){\\n System.out.println(\\\"掛け算モード\\\");\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num1 = Double.parseDouble(stdIn.nextLine());\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num2 = Double.parseDouble(stdIn.nextLine());\\n System.out.println(num1+\\\"*\\\"+num2+\\\"=\\\"+(num1*num2));\\n }\\n public void div(){\\n System.out.println(\\\"割り算モード\\\");\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num1 = Double.parseDouble(stdIn.nextLine());\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num2 = Double.parseDouble(stdIn.nextLine());\\n System.out.println(num1+\\\"/\\\"+num2+\\\"=\\\"+(num1/num2));\\n }\\n} \\n```\\n未完成プログラム④ ファイル名：Kouka4.java\\n```\\npackage kouka2;\\nimport java.util.Scanner;\\npublic class Kouka4 {\\n public static void main(String[] args) {\\n //この main メソッドがスマホ本体の制御をしているイメージ\\n //入力され たコマンドによって、起動するアプリを選択する\\n Scanner stdIn = new Scanner(System.in);\\n // アプリのインスタンスを管理する変数app を宣言する\\n __(4)__ app;\\n //ユーザーに起動するアプリを選択して もらう\\n System.out.print(\\\"起動したいアプリを選択してください:\\\");\\n switch(stdIn.nextLine()){\\n case \\\"memo\\\":\\n //メモアプリのインスタンスを生成する\\n app = new memoApp();\\n //メモアプリを起動する\\n app.startUp();\\n break;\\n case \\\"calc\\\":\\n //電卓アプリのインスタンスを生成する\\n app = new calcApp();\\n //電卓アプリを起動する\\n app.startUp(); \\nSystem.out.println(\\\"そんなアプリは存在しません。\\\");\\n }\\n }\\n}\\n```\",\"questionType\":\"textarea\",\"maxlength\":\"60\",\"answers\":[{\"id\":\"1hn58lk9b0.hf3rut4val\",\"value\":\"double\"}],\"useAIScoring\":true},\"1hn4ro8ab0.3mad99nb5qg\":{\"parentId\":\"1hn4pi8k90.dqrd3arsu6o\",\"question\":\"(3)を埋めなさい。\\n未完成プログラム①　IFApp.java\\n```\\npackage kouka2;\\n// App インタフェースの定義\\n// アプ リ用のインターフェース\\npublic __(1)__ IFApp {\\n // 抽象メソッド startUp の定義\\n // アプリの起動\\n public __(2)__ void startUp();\\n // 抽象メソッド end の定義\\n // アプリの終了\\n public __(2) _ void end();\\n}\\n```\\n未完成プログラム② ファイル名：memoApp.java \\n```\\npackage kouka2;\\nimport java.util.Scanner;\\n// メモアプリ\\npublic class memoApp __(3)__ {\\n private StringBuilder memo;\\n Scanner stdIn = new Scanner(System.in);\\n // コンストラクタ定義\\n public memoApp() {\\n this.memo = new StringBuilder();\\n }\\n// メソッド定義 抽象メソッドのオーバーライド\\n // アプリの起 動 startUp メソッド\\n public void startUp() {\\n System.out.println(\\\"メモアプリを起動します！\\\");\\n //アプリの本機能である、memo メソッドを呼び出す\\n memo();\\n }\\n // アプリの起動 end メソ ッド\\n public void end() {\\n System.out.println(\\\"メモアプリを終了します。\\\");\\n //memo の中身を初期化する\\n memo = new StringBuilder();\\n }\\n // メソッド定義\\n // メモ機能の実装 ココから 下は実際にメモをする処理が書いてあるだけです。\\n //問題を解くうえでは必要ありませんので、読まなくて大丈夫です。\\n public void memo(){\\n //実際アプリを作るときには、このメソッドの中に機能を実装する\\n //今回は簡易的な実装とする\\n System.out.println(\\\"メモの内容を書いて、エンターキー ¥n 終了する場合は\\nend と入力して下さい:\\\");\\nString str = stdIn.nextLine();\\n if(str.equals(\\\"end\\\")){\\n this.end();\\n return;\\n }\\n memo.append(str);\\n System.out.println(\\\"現在のメモの中身は・・・\\\");\\n System.out.println(memo.toString());\\n this.memo();\\n }\\n} \\n```\\n未完成プログラム③ ファイル名：calcApp.java \\n```\\npackage kouka2;\\nimport java.util.Scanner;\\n// 電卓アプリ\\npublic class calcApp __(3)__ {\\n Scanner stdIn = new Scanner(System.in);\\n // メソッド定義 抽象メソッドのオーバーライド\\n // アプリの起動 startUp メソッド\\n public void startUp() {\\n System.out.println(\\\"電卓アプリを起動します！\\\");\\n //アプリの本機能である、calc メソッドを呼び出す\\n calc();\\n } \\n// アプリの起動 end メソッド\\n public void end() {\\n System.out.println(\\\"電卓アプリを終了します。\\\");\\n }\\n // メソッド定義\\n // 電卓機能の実装 ココから下は実際に計算する処 理が書いてあるだけです。\\n //問題を解くうえでは必要ありませんので、読まなくて大丈夫です。\\n //早く終わった人は計算の処理を短くできないかチャレンジしてください。\\n public void calc(){\\n //実際アプリを作るときには、このメソッドの中に機能を実装する\\n //今回は簡易的な実装とする\\n System.out.print(\\\" 足し算モード:+ ¥n 引き算モード:- ¥n 掛け算モード:*\\n¥n 割り算モード:/ ¥n 終了:end と入力して下さい:\\\");\\n switch(stdIn.nextLine()){\\n case \\\"+\\\":\\n plus();\\n break;\\n case \\\"-\\\":\\n minus();\\n break;\\n case \\\"*\\\":\\n multi();\\n break;\\n case \\\"/\\\":\\n div();\\n break;\\n case \\\"end\\\":\\nend();\\n return;\\n default:\\n System.out.println(\\\"不明なコマンドです。\\\");\\n }\\n System.out.println(\\\"-------------------------------------------\\n---------------------------\\\");\\n this.calc();\\n }\\n //各計算メソッド\\n public void plus(){\\n System.out.println(\\\"足し算モード\\\");\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num1 = Double.parseDouble(stdIn.nextLine());\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num2 = Double.parseDouble(stdIn.nextLine());\\n System.out.println(num1+\\\"+\\\"+num2+\\\"=\\\"+(num1+num2));\\n }\\n public void minus(){\\n System.out.println(\\\"引き算モード\\\");\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num1 = Double.parseDouble(stdIn.nextLine());\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num2 = Double.parseDouble(stdIn.nextLine());\\n System.out.println(num1+\\\"-\\\"+num2+\\\"=\\\"+(num1-num2));\\n } \\npublic void multi(){\\n System.out.println(\\\"掛け算モード\\\");\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num1 = Double.parseDouble(stdIn.nextLine());\\n System.out.print(\\\"数字を入 力してください：\\\");\\n double num2 = Double.parseDouble(stdIn.nextLine());\\n System.out.println(num1+\\\"*\\\"+num2+\\\"=\\\"+(num1*num2));\\n }\\n public void div(){\\n System.out.println(\\\"割り算モード\\\");\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num1 = Double.parseDouble(stdIn.nextLine());\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num2 = Double.parseDouble(stdIn.nextLine());\\n System.out.println(num1+\\\"/\\\"+num2+\\\"=\\\"+(num1/num2));\\n }\\n} \\n```\\n未完成プログラム④ ファイル名：Kouka4.java\\n```\\npackage kouka2;\\nimport java.util.Scanner;\\npublic class Kouka4 {\\n public static void main(String[] args) {\\n //この main メソッドがスマホ本体の制御をしているイメージ\\n //入力されたコマンドによって、起動するアプリを選択 する\\n Scanner stdIn = new Scanner(System.in);\\n // アプリのインスタンスを管理する変数app を宣言する\\n __(4)__ app;\\n //ユーザーに起動するアプリを選択してもらう\\n System.out.print(\\\"起動したいアプリを選択してください:\\\");\\n switch(stdIn.nextLine()){\\n case \\\"memo\\\":\\n //メモアプリのインスタンスを生成する\\n app = new memoApp();\\n //メモアプリを起動する\\n app.startUp();\\n break;\\n case \\\"calc\\\":\\n //電卓アプリのインスタンスを生成する\\n app = new calcApp();\\n //電卓アプリを起動する\\n app.startUp(); \\nSystem.out.println(\\\"そんなアプリは存在しません。\\\");\\n }\\n }\\n}\\n```\",\"questionType\":\"textarea\",\"maxlength\":\"60\",\"answers\":[{\"id\":\"1hn58oooo0.8bu19rulkvo\",\"value\":\"implements Runnable\"}],\"useAIScoring\":true},\"1hn4rogdj0.dvmi29jgqk\":{\"parentId\":\"1hn4pi8k90.dqrd3arsu6o\",\"question\":\"(2)を埋めなさい。\\n未完成プログラム①　IFApp.java\\n```\\npackage kouka2;\\n// App インタフェースの定義\\n// アプリ用のインターフェース\\npublic __(1)__ IFApp {\\n // 抽象メソッド startUp の定義\\n // アプリの起動\\n public __(2)__ void startUp();\\n // 抽象メソッド end の定義\\n // アプリの終了\\n public __(2)__ void end();\\n}\\n```\\n未完成プログラム② ファイル名：memoApp.java \\n```\\npackage kouka2;\\nimport java.util.Scanner;\\n// メモアプリ\\npublic class memoApp __(3)__ {\\n private StringBuilder memo;\\n Scanner stdIn = new Scanner(System.in);\\n // コンストラクタ定義\\n public memoApp() {\\n this.memo = new StringBuilder();\\n }\\n// メソッド定義 抽象メソッドのオーバーライド\\n // アプリの起動 startUp メソッド\\n public void startUp() {\\n System.out.println(\\\"メモアプリを起動します！\\\");\\n //アプリの本機能である、memo メソッドを呼び出す\\n memo();\\n }\\n // アプリの起動 end メソッド\\n public void end() {\\n System.out.println(\\\"メモアプリを終了します。\\\");\\n //memo の中身を初期化する\\n memo = new StringBuilder();\\n }\\n // メソッド定義\\n // メモ機能の実装 ココから下は実際にメモをする処理が書いてあるだけです。\\n //問題を解くうえでは必要ありませんので、読まなくて大丈夫です。\\n public void memo(){\\n //実際アプリを作るときには、このメソッドの中に機能を実装する\\n //今回は簡易的な実装とする\\n System.out.println(\\\"メモの内容を書いて、エンターキー ¥n 終了する場合は\\nend と入力して下さい:\\\");\\nString str = stdIn.nextLine();\\n if(str.equals(\\\"end\\\")){\\n this.end();\\n return;\\n }\\n memo.append(str);\\n System.out.println(\\\"現在のメモの中身は・・・\\\");\\n System.out.println(memo.toString());\\n this.memo();\\n }\\n} \\n```\\n未完成プログラム③ ファイル名：calcApp.java \\n```\\npackage kouka2;\\nimport java.util.Scanner;\\n// 電卓アプリ\\npublic class calcApp __(3)__ {\\n Scanner stdIn = new Scanner(System.in);\\n // メソッド定義 抽象メソッドのオーバーライド\\n //  アプリの起動 startUp メソッド\\n public void startUp() {\\n System.out.println(\\\"電卓アプリを起動します！\\\");\\n //アプリの本機能である、calc メソッドを呼び出す\\n calc();\\n } \\n// アプリの起動 end メソッド\\n public void end() {\\n System.out.println(\\\"電卓アプリを終了します。\\\");\\n }\\n // メソッド定義\\n // 電卓機能の実装 ココから下は実際に計算する処理が書いてあるだけです。\\n //問題を解くうえでは必要ありませんので、読まなくて大丈夫です。\\n //早く終わった人は計算の処理を短くできないかチャレンジしてください。\\n public void calc(){\\n //実際アプリを作るときには、このメソッドの中に機能を実装する\\n //今回は簡易的な実装とする\\n System.out.print(\\\" 足し算モード:+ ¥n 引き算モード:- ¥n 掛け算モード:*\\n¥n 割り算モード:/ ¥n 終了:end と入力して下さい:\\\");\\n switch(stdIn.nextLine()){\\n case \\\"+\\\":\\n plus();\\n break;\\n case \\\"-\\\":\\n minus();\\n break;\\n case \\\"*\\\":\\n multi();\\n break;\\n case \\\"/\\\":\\n div();\\n break;\\n case \\\"end\\\":\\nend();\\n return;\\n default:\\n System.out.println(\\\"不明なコマンドです。\\\");\\n }\\n System.out.println(\\\"-------------------------------------------\\n---------------------------\\\");\\n this.calc();\\n }\\n //各計算メソッド\\n public void plus(){\\n System.out.println(\\\"足し算モード\\\");\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num1 = Double.parseDouble(stdIn.nextLine());\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num2 = Double.parseDouble(stdIn.nextLine());\\n System.out.println(num1+\\\"+\\\"+num2+\\\"=\\\"+(num1+num2));\\n }\\n public void minus(){\\n System.out.println(\\\"引き算モード\\\");\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num1 = Double.parseDouble(stdIn.nextLine());\\n System.out.print(\\\"数 字を入力してください：\\\");\\n double num2 = Double.parseDouble(stdIn.nextLine());\\n System.out.println(num1+\\\"-\\\"+num2+\\\"=\\\"+(num1-num2));\\n } \\npublic void multi(){\\n System.out.println(\\\"掛け算モード\\\");\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num1 = Double.parseDouble(stdIn.nextLine());\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num2 = Double.parseDouble(stdIn.nextLine());\\n System.out.println(num1+\\\"*\\\"+num2+\\\"=\\\"+(num1*num2));\\n }\\n public void div(){\\n System.out.println(\\\"割り算モード\\\");\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num1 = Double.parseDouble(stdIn.nextLine());\\n System.out.print(\\\"数字を入力してください：\\\");\\n double num2 = Double.parseDouble(stdIn.nextLine());\\n System.out.println(num1+\\\"/\\\"+num2+\\\"=\\\"+(num1/num2));\\n }\\n} \\n```\\n未完成プログラム④ ファイル名：Kouka4.java\\n```\\npackage kouka2;\\nimport java.util.Scanner;\\npublic class Kouka4 {\\n public static void main(String[] args) {\\n //この main メソッドがスマホ本体の制御をしているイメージ\\n //入力されたコマンドによって、起動するアプリを選択する\\n Scanner stdIn = new Scanner(System.in);\\n // アプリのインスタンスを管理する変数app を宣言する\\n __(4)__ app;\\n //ユーザーに起動するアプリを選択してもらう\\n System.out.print(\\\"起動したいアプリを選択してください:\\\");\\n switch(stdIn.nextLine()){\\n case \\\"memo\\\":\\n //メモアプリのインスタンスを生成する\\n app = new memoApp();\\n //メモアプリを起動する\\n app.startUp();\\n break;\\n case \\\"calc\\\":\\n //電卓アプリのインスタンスを生成する\\n app = new calcApp();\\n //電卓アプリを起動する\\n app.startUp(); \\nSystem.out.println(\\\"そんなアプリは存在しません。\\\");\\n }\\n }\\n}\\n```\",\"questionType\":\"textarea\",\"maxlength\":\"60\",\"answers\":[{\"id\":\"1hn58iquu0.nr8m5j7u2m8\",\"value\":\"static\"}],\"useAIScoring\":true},\"1hn4s3a5d0.41mocalolsg\":{\"parentId\":\"1hn4hecb70.tjv3gnoi77o\",\"question\":\"下記の実行結果のように、現在のパスワードを入力してもらい、それよりも強力なセキュリティのパス\\nワードを生成して表示するプログラムを作成しなさい。強力なセキュリティのパスワードは、もともとのパ\\nスワードを逆順にしたものとする。なお、StringBuilder クラスを処理で使用すること。\\n\\n実行例:元のパスワードに「abcdefg」と入力した場合\\n```\\n現在のパスワードを入力しいてください:abcdefg\\nセキュリティ上の問題を発見しました。\\nセキュリティを強化したパスワードを作成しました。\\nこちらをお使い下さい\\nあたらしいパスワードは\\\"gfedcba\\\"です。\\n```\",\"questionType\":\"textarea\",\"maxlength\":\"1000\",\"answers\":[{\"id\":\"1hn4s3epb0.avrmn1tv7g\",\"value\":\"package kouka5;\\n\\nimport java.util.Scanner;\\n\\npublic class Password {\\n  public static void main(String[] args) {\\n    Scanner stdIn = new Scanner(System.in);\\n    // パスワードのインスタンスを宣言する\\n    double Password;\\n    //ユーザーにパスワードを設定してもらう\\n    System.out.print(\\\"パスワードを設定してください。:\\\");\\n    switch(stdIn.nextLine()){\\n      //\\\"abcdefg\\\"と入力\\n      case \\\"abcdefg\\\":\\n      System.out.println(\\\"セキュリティ上の問題を発見しました。\\\");\\n      break;\\n      Password.reverse(str.length(\\\"abcdefg\\\") );\\n      System.out.println(\\\"セキュリティを強化したパスワードを作成しました。\\\");\\n\\n      System.out.println(\\\"こちらをお使いく ださい。\\\");\\n\\n      //新しいパスワードを表示する\\n      System.out.println(\\\"新しいパスワードは \\\" + Pass.reverse \\\"です。\\\");\\n    }\\n  }\\n}\\n\"}],\"useAIScoring\":true}},\"isEdit\":false}" 
    }
  }
]
